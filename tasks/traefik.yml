---
- name: Ensure traefik static config is on remote
  ansible.builtin.template:
    src: traefik-static.yaml.j2
    dest: /root/traefik-static.yaml
    mode: "0600"
    owner: root
    group: root

- name: Ensure templates are on remote
  ansible.builtin.copy:
    dest: /root/{{ item.name }}
    content: "{{ item.content }}"
    mode: "0644"
    owner: root
    group: root
  with_items:
    - { content: "{{ portainer_authelia_config_template }}", name: authelia-config.yaml }
    - { content: "{{ portainer_dashy_config_template }}", name: dashy-conf.yaml }
    - { content: "{{ portainer_traefik_dynamic_template }}", name: traefik-dynamic.yaml }

- name: Get templates from remote
  ansible.builtin.fetch:
    src: /root/{{ item }}
    dest: tmp/{{ item }}
  with_items:
    - authelia-config.yaml
    - dashy-conf.yaml
    - traefik-dynamic.yaml

- name: Get other configs on remote
  ansible.builtin.template:
    src: /root/{{ item.name }}
    dest: "{{ item.dest }}"
    mode: "0644"
    owner: root
    group: root
  with_items:
    - { name: authelia-config.yaml, dest: /root/authelia-config/configuration.yaml }
    - { name: dashy-conf.yaml, dest: /root/dashy-conf.yaml }
    - { name: traefik-dynamic.yaml, dest: /root/traefik-dynamic.yaml }

# - name: Ensure traefik dynamic config is on remote
#   ansible.builtin.template:
#     src: traefik-dynamic.yaml.j2
#     dest: /root/traefik-dynamic.yaml
#     mode: "0600"
#     owner: root
#     group: root

- name: Ensure additional certificates are on remote
  ansible.builtin.copy:
    dest: /root/{{ item.file }}
    content: "{{ item.cert }}"
    mode: "0600"
    owner: root
    group: root
  with_items: "{{ portainer_traefik.additional_certs }}"

# - name: Ensure proxmox certificate is on remote
#   copy:
#     dest: /root/cert-proxmox.crt
#     content: "{{ cert_proxmox_backup }}"
#     mode: "0600"

# - name: Ensure cloudflare origin certificate is on remote
#   copy:
#     dest: /root/tbrouwer-cloudflare-origin.cert
#     content: "{{ cloudflare_origin_cert }}"
#     mode: "0600"

# - name: Ensure cloudflare origin key is on remote
#   copy:
#     dest: /root/tbrouwer-cloudflare-origin.key
#     content: "{{ cloudflare_origin_key }}"
#     mode: "0600"

- name: Ensure web network for Traefik is present
  community.docker.docker_network:
    name: web-secure
    internal: false
    state: present

- ansible.builtin.debug:
    msg: "{{ default_volumes + portainer_traefik.additional_volumes }}"

- name: Ensure Traefik reverse proxy Docker container is running
  community.docker.docker_container:
    name: traefik
    image: traefik:latest
    state: started
    command:
      - --configFile=/etc/traefik/static.yaml
    ports:
      - 443:443
      - 8080:8080
    restart_policy: unless-stopped
    networks:
      - name: web-secure
    volumes: "{{ default_volumes + portainer_traefik.additional_volumes }}"
      # - /var/run/docker.sock:/var/run/docker.sock
      # - /root/traefik-static.yaml:/etc/traefik/static.yaml
      # - /root/traefik-dynamic.yaml:/etc/traefik/dynamic.yaml
      # - /root/cert-proxmox.crt:/root/cert-proxmox.crt:ro
      # - /root/tbrouwer-cloudflare-origin.cert:/root/tbrouwer-cloudflare-origin.cert:ro
      # - /root/tbrouwer-cloudflare-origin.key:/root/tbrouwer-cloudflare-origin.key:ro
