---
- name: Ensure Passbolt database Docker volume is present
  community.docker.docker_volume:
    name: database_volume

- name: Ensure Passbolt database Docker container is running
  community.docker.docker_container:
    name: mariadb-passbolt
    image: mariadb:10.3
    labels:
      watchtower.enable: "false"
    env:
      MYSQL_ROOT_PASSWORD: "{{ portainer_passbolt_private.mariadb_root_password }}"
      MYSQL_DATABASE: passbolt
      MYSQL_USER: passbolt
      MYSQL_PASSWORD: "{{ portainer_passbolt_private.mariadb_database_password }}"
    volumes:
      - database_volume:/var/lib/mysql
    restart_policy: unless-stopped
    ports:
      - 3306:3306

- name: Ensure Passbolt gpg Docker volume is present
  community.docker.docker_volume:
    name: gpg_volume

- name: Ensure Passbolt jwt Docker volume is present
  community.docker.docker_volume:
    name: jwt_volume

- name: Ensure Passbolt Docker container is running
  community.docker.docker_container:
    name: passbolt
    image: passbolt/passbolt:latest
    command: [/usr/bin/wait-for.sh, -t, "0", "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}:3306", --, /docker-entrypoint.sh]
    env:
      APP_FULL_BASE_URL: https://passbolt.{{ portainer_root_domain }}
      DATASOURCES_DEFAULT_HOST: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
      DATASOURCES_DEFAULT_PORT: "3306"
      DATASOURCES_DEFAULT_DATABASE: passbolt
      DATASOURCES_DEFAULT_USERNAME: passbolt
      DATASOURCES_DEFAULT_PASSWORD: "{{ portainer_passbolt_private.mariadb_database_password }}"
      EMAIL_TRANSPORT_DEFAULT_HOST: "{{ portainer_notifications.smtp_host }}"
      EMAIL_TRANSPORT_DEFAULT_PORT: "587"
      EMAIL_TRANSPORT_DEFAULT_USERNAME: "{{ portainer_notifications.smtp_username }}"
      EMAIL_TRANSPORT_DEFAULT_PASSWORD: "{{ portainer_notifications.smtp_password }}"
      EMAIL_TRANSPORT_DEFAULT_TLS: "true"
      PASSBOLT_META_DESCRIPTION: "{{ portainer_passbolt.description }}"
      PASSBOLT_SECURITY_SMTP_SETTINGS_ENDPOINTS_DISABLED: "true"
    volumes:
      - gpg_volume:/etc/passbolt/gpg
      - jwt_volume:/etc/passbolt/jwt
    restart_policy: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.passbolt.rule: Host(`passbolt.{{ portainer_root_domain }}`)
      traefik.http.routers.passbolt.entrypoints: web-secure
      traefik.http.routers.passbolt.tls: "true"
    ports:
      - 4080:80

    networks:
      - name: web-secure

- name: Ensure passbolt admin is present
  community.docker.docker_container_exec:
    container: passbolt
    user: www-data
    command: >
      /usr/share/php/passbolt/bin/cake passbolt register_user
      -u {{ portainer_passbolt_private.user_email }}
      -f {{ portainer_passbolt.user_name }}
      -l {{ portainer_passbolt.user_surname }}
      -r admin
  register: passbolt_result_admin
  changed_when: "'Username: The username is already in use' not in passbolt_result_admin.stdout"
  failed_when: false

- name: Ensure gpg fingerprint is imported
  community.docker.docker_container_exec:
    container: passbolt
    user: www-data
    command: >
      export PASSBOLT_GPG_SERVER_KEY_FINGERPRINT="$(gpg --home $GNUPGHOME
      --list-keys ${PASSBOLT_KEY_EMAIL:-passbolt@{{ portainer_root_domain }}} |
      grep -Ev "^(pub|sub|uid|^$)" |
      tr -d ' ')"
  register: passbolt_result_fingerprint
  changed_when: false
  failed_when: false

- name: Print result passbolt admin
  ansible.builtin.debug:
    msg: "{{ passbolt_result_fingerprint.stdout }}"
  when: "'Username: The username is already in use' not in passbolt_result_fingerprint.stdout"
