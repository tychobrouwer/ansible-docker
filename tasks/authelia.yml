---
- name: Save password
  ansible.builtin.copy:
    dest: /root/authelia-config/password
    content: "{{ portainer_authelia.user_password }}"
    mode: "0600"
    owner: root
    group: root
  register: password_file

- name: Generate password hash
  ansible.builtin.command: >
    docker run --name temp authelia/authelia:latest
    authelia crypto hash generate argon2 --password '{{ portainer_authelia.user_password }}' --no-confirm
  when: password_file.changed
  register: password_hash
  changed_when: false

- name: Delete container
  community.docker.docker_container:
    name: temp
    state: absent
    keep_volumes: false
  changed_when: false
  when: password_file.changed

- name: Set password hash
  ansible.builtin.set_fact:
    portainer_authelia_password_hash: "{{ password_hash.stdout | regex_replace('Digest: ', '') }}"
  when: password_file.changed

- name: Save password hash
  ansible.builtin.copy:
    dest: /root/authelia-config/password-hash
    content: "{{ portainer_authelia_password_hash }}"
    mode: "0600"
    owner: root
    group: root
  register: password_hash_file
  when: password_file.changed

- name: Get password hash from remote
  ansible.builtin.slurp:
    src: /root/authelia-config/password-hash
  register: password_hash_file
  when: not password_file.changed

- name: Set password hash
  ansible.builtin.set_fact:
    portainer_authelia_password_hash: "{{ password_hash_file.content | b64decode }}"
  when: not password_file.changed

- name: Ensure authelia user database is on remote
  ansible.builtin.template:
    src: authelia-user-database.yaml.j2
    dest: /root/authelia-config/users_database.yaml
    mode: "0600"
    owner: root
    group: root

- name: Create files on remote
  ansible.builtin.copy:
    dest: "/root/authelia-config/{{ item.file }}"
    content: "{{ item.content }}"
    mode: "0600"
    owner: root
    group: root
  with_items:
    - { file: authelia_jwt_secret.key, content: "{{ portainer_authelia.jwt_secret }}" }
    - { file: authelia_session_secret.key, content: "{{ portainer_authelia.session_secret }}" }
    - { file: authelia_storage_secret.key, content: "{{ portainer_authelia.storage_secret }}" }
    - { file: smtp_password.password, content: "{{ portainer_notifications.smtp_password }}" }

- name: Ensure Authelia Docker container is running
  community.docker.docker_container:
    name: authelia
    image: authelia/authelia:latest
    volumes:
      - /root/authelia-config:/config
    command:
      - authelia
      - --config=/config/configuration.yaml
    env:
      AUTHELIA_JWT_SECRET_FILE: /config/authelia_jwt_secret.key
      AUTHELIA_SESSION_SECRET_FILE: /config/authelia_session_secret.key
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /config/authelia_storage_secret.key
      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /config/smtp_password.password
    restart_policy: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.authelia.rule: Host(`authelia.{{ portainer_root_domain }}`)
      traefik.http.routers.authelia.entrypoints: web-secure
      traefik.http.routers.authelia.tls: "true"
      traefik.http.services.authelia.loadbalancer.server.port: "9091"
    networks:
      - name: web-secure
    healthcheck:
      test: [NONE]
