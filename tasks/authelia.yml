---
- name: Save password
  ansible.builtin.copy:
    dest: /root/authelia-config/password
    content: "{{ portainer_authelia.user_password }}"
    mode: "0600"
    owner: root
    group: root
  register: password_file

- name: Generate password hash
  ansible.builtin.command: >
    docker run --name temp authelia/authelia:latest
    authelia crypto hash generate argon2 --password '{{ portainer_authelia.user_password }}' --no-confirm
  when: password_file.changed
  register: password_hash
  changed_when: false

- name: Delete container
  community.docker.docker_container:
    name: temp
    state: absent
    keep_volumes: false
  changed_when: false
  when: password_file.changed

- name: Set password hash
  ansible.builtin.set_fact:
    portainer_authelia_password_hash: "{{ password_hash.stdout | regex_replace('Digest: ', '') }}"
  when: password_file.changed

- name: Save password hash
  ansible.builtin.copy:
    dest: /root/authelia-config/password-hash
    content: "{{ portainer_authelia_password_hash }}"
    mode: "0600"
    owner: root
    group: root
  register: password_hash_file
  when: password_file.changed

- name: Get password hash from remote
  ansible.builtin.slurp:
    src: /root/authelia-config/password-hash
  register: password_hash_file
  when: not password_file.changed

- name: Set password hash
  ansible.builtin.set_fact:
    portainer_authelia_password_hash: "{{ password_hash_file.content | b64decode }}"
  when: not password_file.changed

- name: Ensure authelia user database is on remote
  ansible.builtin.template:
    src: authelia-user-database.yaml.j2
    dest: /root/authelia-config/users_database.yaml
    mode: "0600"
    owner: root
    group: root

- name: Ensure Authelia Docker container is running
  community.docker.docker_container:
    name: authelia
    image: authelia/authelia:latest
    volumes:
      - /root/authelia-config:/config
    command:
      - authelia
      - --config=/config/configuration.yaml
    restart_policy: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - name: web-secure
    healthcheck:
      test: [NONE]
    cpus: "{{ portainer_cpus }}"
